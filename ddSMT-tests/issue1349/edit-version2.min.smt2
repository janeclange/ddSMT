(set-option :produce-unsat-cores true)
(declare-fun _substvar_15_ () Int)
(declare-fun _substvar_4_ () Int)
(declare-fun _substvar_6_ () Int)
(declare-fun _substvar_17_ () Int)
(declare-fun _substvar_1_ () Int)
(declare-fun _substvar_691_ () Int)
(declare-fun _substvar_27_ () Int)
(declare-fun _substvar_8_ () Int)
(declare-fun _substvar_18_ () Int)
(declare-fun _substvar_21_ () Int)
(declare-fun _substvar_3_ () Int)
(declare-fun _substvar_10_ () Int)
(declare-fun _substvar_29_ () Int)
(declare-fun _substvar_12_ () Int)
(declare-fun _substvar_19_ () Int)
(declare-fun _substvar_2_ () Int)
(declare-fun _substvar_5_ () Int)
(declare-fun _substvar_13_ () Int)
(declare-fun _substvar_28_ () Int)
(declare-fun _substvar_14_ () Int)
(declare-fun _substvar_20_ () Int)
(declare-fun _substvar_23_ () Int)
(declare-fun _substvar_16_ () Int)
(declare-fun _substvar_22_ () Int)
(declare-fun _substvar_855_ () Int)
(declare-fun _substvar_865_ () Int)
(declare-fun _substvar_856_ () Int)
(declare-fun _substvar_7_ () Int)
(declare-fun _substvar_9_ () Int)
(declare-fun _substvar_25_ () Int)
(declare-fun _substvar_11_ () Int)
(declare-fun _substvar_700_ () Int)
(declare-fun _substvar_26_ () Int)
(declare-fun _substvar_24_ () Int)
(define-fun __node_trans_DRAGON_0 ((DRAGON.usr.e01@1 Bool) (DRAGON.usr.e02@1 Bool) (DRAGON.usr.e03@1 Bool) (DRAGON.usr.e04@1 Bool) (DRAGON.usr.e05@1 Bool) (DRAGON.usr.e06@1 Bool) (DRAGON.usr.e07@1 Bool) (DRAGON.usr.e08@1 Bool) (DRAGON.usr.e09@1 Bool) (DRAGON.usr.e10@1 Bool) (DRAGON.usr.e11@1 Bool) (DRAGON.usr.e12@1 Bool) (DRAGON.usr.init_invalid@1 Int) (DRAGON.res.nondet_30 Int) (DRAGON.res.nondet_29 Int) (DRAGON.res.nondet_28 Int) (DRAGON.res.nondet_27 Int) (DRAGON.res.nondet_26 Int) (DRAGON.res.nondet_25 Int) (DRAGON.res.nondet_24 Int) (DRAGON.res.nondet_23 Int) (DRAGON.res.nondet_22 Int) (DRAGON.res.nondet_21 Int) (DRAGON.res.nondet_20 Int) (DRAGON.res.nondet_19 Int) (DRAGON.res.nondet_18 Int) (DRAGON.res.nondet_17 Int) (DRAGON.res.nondet_16 Int) (DRAGON.res.nondet_15 Int) (DRAGON.res.nondet_14 Int) (DRAGON.res.nondet_13 Int) (DRAGON.res.nondet_12 Int) (DRAGON.res.nondet_11 Int) (DRAGON.res.nondet_10 Int) (DRAGON.res.nondet_9 Int) (DRAGON.res.nondet_8 Int) (DRAGON.res.nondet_7 Int) (DRAGON.res.nondet_6 Int) (DRAGON.res.nondet_5 Int) (DRAGON.res.nondet_4 Int) (DRAGON.res.nondet_3 Int) (DRAGON.res.nondet_2 Int) (DRAGON.res.nondet_1 Int) (DRAGON.res.nondet_0 Int) (DRAGON.usr.exclusive@1 Int) (DRAGON.usr.shared@1 Int) (DRAGON.usr.shared_dirty@1 Int) (DRAGON.usr.dirty@1 Int) (DRAGON.usr.invalid@1 Int) (DRAGON.usr.erreur@1 Bool) (DRAGON.res.init_flag@1 Bool) (DRAGON.impl.usr.mem_init@1 Int) (DRAGON.usr.e01@0 Bool) (DRAGON.usr.e02@0 Bool) (DRAGON.usr.e03@0 Bool) (DRAGON.usr.e04@0 Bool) (DRAGON.usr.e05@0 Bool) (DRAGON.usr.e06@0 Bool) (DRAGON.usr.e07@0 Bool) (DRAGON.usr.e08@0 Bool) (DRAGON.usr.e09@0 Bool) (DRAGON.usr.e10@0 Bool) (DRAGON.usr.e11@0 Bool) (DRAGON.usr.e12@0 Bool) (DRAGON.usr.init_invalid@0 Int) (DRAGON.usr.exclusive@0 Int) (DRAGON.usr.shared@0 Int) (DRAGON.usr.shared_dirty@0 Int) (DRAGON.usr.dirty@0 Int) (DRAGON.usr.invalid@0 Int) (DRAGON.usr.erreur@0 Bool) (DRAGON.res.init_flag@0 Bool) (DRAGON.impl.usr.mem_init@0 Int)) Bool (let ((X2 false)) (let ((X4 true)) (let ((X6 false)) (let ((X9 false)) (let ((X11 true)) (and (= _substvar_691_ (ite DRAGON.usr.e01@1 _substvar_855_ (ite true 0 _substvar_855_))) true true true (= 0 (ite DRAGON.usr.e02@1 0 (ite false DRAGON.usr.invalid@0 (ite false 0 (ite false 0 DRAGON.usr.invalid@0))))) true (ite (>= _substvar_691_ 2) true false) true)))))))
(define-fun __node_trans_excludes12_0 ((excludes12.usr.X1@1 Bool) (excludes12.usr.X2@1 Bool) (excludes12.usr.X3@1 Bool) (excludes12.usr.X4@1 Bool) (excludes12.usr.X5@1 Bool) (excludes12.usr.X6@1 Bool) (excludes12.usr.X7@1 Bool) (excludes12.usr.X8@1 Bool) (excludes12.usr.X9@1 Bool) (excludes12.usr.X10@1 Bool) (excludes12.usr.X11@1 Bool) (excludes12.usr.X12@1 Bool) (excludes12.usr.excludes@1 Bool) (excludes12.res.init_flag@1 Bool) (excludes12.usr.X1@0 Bool) (excludes12.usr.X2@0 Bool) (excludes12.usr.X3@0 Bool) (excludes12.usr.X4@0 Bool) (excludes12.usr.X5@0 Bool) (excludes12.usr.X6@0 Bool) (excludes12.usr.X7@0 Bool) (excludes12.usr.X8@0 Bool) (excludes12.usr.X9@0 Bool) (excludes12.usr.X10@0 Bool) (excludes12.usr.X11@0 Bool) (excludes12.usr.X12@0 Bool) (excludes12.usr.excludes@0 Bool) (excludes12.res.init_flag@0 Bool)) Bool (and (or (or (or (or (or (or (and (and (and (and (not excludes12.usr.X2@1) true) true) true) true) (and (and (and (and (not excludes12.usr.X2@1) true) excludes12.usr.X5@1) true) true)) (and (and (and (and (not excludes12.usr.X1@1) excludes12.usr.X2@1) excludes12.usr.X5@1) true) true)) false) false) false) false) true))
(declare-fun f92@1 () Bool)
(declare-fun f93@1 () Bool)
(declare-fun f96@1 () Bool)
(assert (let ((X2 _substvar_22_)) (and true (=> false false) (__node_trans_DRAGON_0 f92@1 f93@1 false false f96@1 false false false false false false false _substvar_2_ 0 _substvar_16_ 0 _substvar_8_ _substvar_9_ _substvar_11_ _substvar_25_ 0 0 0 _substvar_28_ _substvar_15_ 0 _substvar_1_ 0 0 0 0 0 0 _substvar_21_ _substvar_3_ 0 _substvar_23_ _substvar_7_ _substvar_24_ _substvar_10_ 0 0 0 _substvar_13_ _substvar_19_ _substvar_22_ _substvar_4_ _substvar_5_ _substvar_6_ false false _substvar_27_ false false false false false false true true false true false true _substvar_12_ _substvar_14_ _substvar_29_ 0 _substvar_17_ _substvar_18_ false false 0) true (__node_trans_excludes12_0 f92@1 f93@1 false false f96@1 false false false false false false false false false false false false false false false true true false true false true false false) true true)))
(assert (> _substvar_18_ 0))
(push 1)
(check-sat)
(pop 1)
(check-sat)
(get-unsat-core)

